=diskutil=

==USB Stick formatieren==

Um einen USB-Stick als FAT32 zu formatieren, macht man also dies:

Stick in den USB-Port stecken. Ok, das war vorhersehbar.
Terminal öffnen. (Wenn es nicht schon offen ist)
Im Terminal eingeben: 

{{{class="brush: bash; ; toolbar: false;"
    $ diskutil list
}}}
	
In der darauf erscheinenden Anzeige den Stick suchen. Bei mir tauchte er gerade als

{{{class="brush: bash; ; toolbar: false;"
    $ /dev/disk3 
}}}
	
	
| #  | TYPE                  | NAME   | SIZE      | IDENTIFIER |
|----+-----------------------+--------+-----------+------------|
| 0: | GUID_partition_scheme |        | *973.8 Mi | disk3      |
| 1: | Microsoft Basic Data  | POLLUX | 971.9 Mi  | disk3s1    |

auf. Das “GUID_partition_scheme” schien dem PC nicht zu schmecken, denn der Stick liess sich dort nicht mounten.
Wichtig für den nächsten Schritt ist der “IDENTIFIER” des Sticks, in diesem Fall “disk3″.

Nun kommt der magische Befehl:

{{{class="brush: bash; ; toolbar: false;"
    $ diskutil partitionDisk /dev/disk3 1 MBRFormat FAT32 "POLLUX" 100%
}}}

	
Damit wird eine Partition “Pollux” auf dem Stick angelegt, die den zur Verfügung stehenden Platz benutzt und durch das “MBRFormat” ist er auch wirklich am PC les- und nutzbar.
Einen Stick mit zwei gleich große Partitionen (namens “Hanni” und “Nanni” zb) könnte man mittels

{{{class="brush: bash; ; toolbar: false;"
    $ diskutil partitionDisk /dev/disk3 2 MBRFormat FAT32 "HANNI" 50% FAT32 "NANNI" 50%
}}}


==USB Stick bootfähig machen mit einem Image==

schauen wie der USB Stick heißt

{{{class="brush: bash; ; toolbar: false;"
    $ diskutil list
    $ diskutil unmountDisk /dev/diskN
}}}

Image schreiben

{{{class="brush: bash; ; toolbar: false;"
    $ sudo dd if=/path/to/downloaded.img of=/dev/diskN bs=1024
}}}

[ [[index|Go home]] ]
